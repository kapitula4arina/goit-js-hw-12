{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nexport let perPage = 15;\n\nconst KEY_API = '47396202-c5f2839f415e9ee9a67459191';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport async function getImages(qValue, page) {\n    if (!qValue || qValue.trim() === '') {\n        throw new Error('Search query cannot be empty.');\n    }\n\n    try {\n        const response = await axios.get('', {\n            params: {\n                key: KEY_API,\n                q: qValue,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true,\n                page,\n                per_page: perPage,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        throw error;\n    }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n});\n    \nexport function renderGallery(data, tagToInsert) {\n    tagToInsert.insertAdjacentHTML('beforeend', createMarkup(data));\n\n    lightbox.refresh();\n};\n\nfunction createMarkup(arr) {\n    return arr.map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads }) => {\n        return `<li class = 'list-item'>\n            <a class='gallery-link' href='${largeImageURL}'>\n                <img\n                    class = 'gallery-image'\n                    src = '${webformatURL}'\n                    alt =  '${tags}'>\n                <ul class = 'description-list'>\n                    <li class = 'description-item'>\n                        <h3>Likes</h3>\n                        <p>${likes}</p>\n                    </li>\n                    <li class = 'description-item'>\n                        <h3>Views</h3>\n                        <p>${views}</p>\n                    </li>\n                    <li class = 'description-item'>\n                        <h3>Comments</h3>\n                        <p>${comments}</p>\n                    </li>\n                    <li class = 'description-item'>\n                        <h3>Downloads</h3>\n                        <p>${downloads}</p>\n                    </li>\n                </ul>\n            </a>\n        </li>`\n    }).join('');\n};","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { getImages, perPage } from './js/pixabay-api';\nimport { renderGallery } from './js/render-functions';\n\nconst form = document.querySelector('.search-form');\nconst inputSearch = document.querySelector('[name=\"search\"]');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more-images');\n\nconst localKey = 'input-name-image';\nconst formData = { search: '' };\nlet page = 1, galleryData = { totalHits: 0 };\n\ninitialize();\n\nfunction initialize() {\n    loadMoreBtn.style.display = 'none';\n    const localData = JSON.parse(localStorage.getItem(localKey));\n    if (localData) {\n        inputSearch.value = localData.search;\n        formData.search = localData.search;\n    }\n\n    form.addEventListener('input', saveToLocalStorage);\n    form.addEventListener('submit', handleSearch);\n    loadMoreBtn.addEventListener('click', loadMoreImages);\n}\n\nfunction saveToLocalStorage(e) {\n    formData.search = e.target.value.trim();\n    localStorage.setItem(localKey, JSON.stringify(formData));\n}\n\nasync function handleSearch(e) {\n    e.preventDefault();\n    resetGallery();\n\n    const searchQuery = inputSearch.value.trim();\n    if (!searchQuery) return showMessage('info', 'The field must be filled');\n\n    await fetchImages(searchQuery, 1);\n}\n\nasync function loadMoreImages() {\n    page += 1;\n\n    try {\n        await fetchImages(formData.search, page, true);\n    } catch (error) {\n        console.error('Error loading more images:', error);\n        showMessage('error', 'Failed to load more images. Please try again later!');\n    }\n}\n\nasync function fetchImages(search, currentPage, append = false) {\n    toggleLoader(true);\n\n    try {\n        const response = await getImages(search, currentPage);\n        const { hits, totalHits } = response;\n\n        if (!hits.length) return showMessage('warning', 'Sorry, no images match your query!');\n\n        galleryData.totalHits = totalHits;\n        append ? appendGallery(hits) : renderGallery(hits, gallery);\n\n        hits.length < perPage || currentPage * perPage >= totalHits\n            ? hideLoadMoreButton()\n            : showLoadMoreButton();\n\n    } catch (error) {\n        console.error(error);\n        showMessage('error', 'Something went wrong. Please try again later!');\n    } finally {\n        toggleLoader(false);\n    }\n}\n\nfunction resetGallery() {\n    gallery.innerHTML = '';\n    hideLoadMoreButton();\n    toggleLoader(false);\n    page = 1;\n}\n\nfunction appendGallery(hits) {\n    renderGallery(hits, gallery);\n    scrollToNewImages();\n}\n\nfunction toggleLoader(show) {\n    const loader = document.querySelector('.loader');\n    if (show) {\n        if (!loader) gallery.insertAdjacentHTML('beforeend', '<div class=\"loader\"></div>');\n    } else {\n        if (loader) loader.remove();\n    }\n}\n\nfunction showLoadMoreButton() {\n    loadMoreBtn.style.display = 'block';\n}\n\nfunction hideLoadMoreButton() {\n    loadMoreBtn.style.display = 'none';\n}\n\nfunction scrollToNewImages() {\n    const firstImage = document.querySelector('.list-item');\n    if (!firstImage) return;\n\n    const { height } = firstImage.getBoundingClientRect();\n    window.scrollBy({ top: height * 2, behavior: 'smooth' });\n}\n\nfunction showMessage(type, message) {\n    const bgColor = {\n        success: 'rgb(0, 255, 128, 0.7)',\n        info: 'rgb(76, 153, 255, 0.7)',\n        warning: 'rgb(255, 193, 7, 0.7)',\n        error: 'rgb(255, 76, 76, 0.7)',\n    };\n\n    iziToast.show({\n        message,\n        messageColor: 'white',\n        position: \"topRight\",\n        backgroundColor: bgColor[type],\n    });\n}\n"],"names":["perPage","KEY_API","axios","getImages","qValue","page","error","lightbox","SimpleLightbox","renderGallery","data","tagToInsert","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","inputSearch","gallery","loadMoreBtn","localKey","formData","galleryData","initialize","localData","saveToLocalStorage","handleSearch","loadMoreImages","resetGallery","searchQuery","showMessage","fetchImages","search","currentPage","append","toggleLoader","response","hits","totalHits","appendGallery","hideLoadMoreButton","showLoadMoreButton","scrollToNewImages","show","loader","firstImage","height","type","message","bgColor","iziToast"],"mappings":"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"}